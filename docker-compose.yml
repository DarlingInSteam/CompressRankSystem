version: '3.8'

services:
  # Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - compress-rank-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  # Redis для RequestRateLimiter в API Gateway
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - compress-rank-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MinIO object storage
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"   # API port
      - "9001:9001"   # Console port
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - compress-rank-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3

  # API Gateway - новый центральный компонент для маршрутизации запросов
  api-gateway:
    build:
      context: ./ApiGatewayCompressionRankSystem
    container_name: compress-rank-api-gateway
    ports:
      - "8082:8082"
    environment:
      - IMAGE_STORAGE_SERVICE_URL=http://image-storage:8081
      - COMPRESSION_SERVICE_URL=http://compression-service:8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      image-storage:
        condition: service_started
      compression-service:
        condition: service_started
    networks:
      - compress-rank-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Сервис хранения изображений
  image-storage:
    build:
      context: ./ImageStorageService
    container_name: compress-rank-image-storage
    ports:
      - "8091:8081"  # Изменен порт хоста с 8081 на 8091
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_H2_CONSOLE_ENABLED=true
      - SPRING_H2_CONSOLE_SETTINGS_WEB_ALLOW_OTHERS=true
    volumes:
      - ./data:/app/data
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - compress-rank-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Сервис сжатия изображений
  compression-service:
    build:
      context: ./CompressionService
    container_name: compress-rank-compression-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - IMAGE_STORAGE_URL=http://image-storage:8081
    volumes:
      - ./data:/app/data
      - ./webp_binaries:/app/webp_binaries
    depends_on:
      rabbitmq:
        condition: service_healthy
      image-storage:
        condition: service_started
    networks:
      - compress-rank-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Административная панель
  admin-panel:
    build:
      context: ./admin-panel
    container_name: compress-rank-admin-panel
    ports:
      - "3000:80"
    environment:
      # Теперь админ-панель обращается к API Gateway вместо прямого доступа к сервисам
      - REACT_APP_API_URL=http://api-gateway:8082
    depends_on:
      - api-gateway
    networks:
      - compress-rank-network

networks:
  compress-rank-network:
    driver: bridge

volumes:
  rabbitmq_data:
  minio_data:
  redis_data: